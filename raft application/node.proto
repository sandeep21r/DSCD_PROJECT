syntax = "proto3";

message LogReplicationRequest {
  int32 node_id = 1;
  int32 last_log_index = 2;
  int32 last_log_term = 3;
}

message LogReplicationResponse {
  repeated LogEntry log_entries = 1;
}

message LogEntry {
  int32 index = 1;
  int32 term = 2;
  string key = 3;
  string operation = 4;
  string value = 5;
}

message AppendEntriesRequest {
  int32 term = 1;
  int32 leader_id = 2;
  int32 prev_log_index = 3;
  int32 prev_log_term = 4;
  repeated LogEntry entries = 5;
  int32 leader_commit = 6;
  int32 lease_duration = 7;
}

message AppendEntriesResponse {
  int32 currTerm = 1;
  string success = 2;
}

message RequestVoteRequest {
  int32 term = 1;
  int32 candidate_id = 2;
  int32 last_log_index = 3;
  int32 last_log_term = 4;
}

message RequestVoteResponse {
  int32 term = 1;
  bool vote_granted = 2;
  int32 lease_duration = 5;
}


message ServeClientArgs {
  string Request = 1;
}



message ServeClientReply {
  string Data = 1;
  int32 LeaderID = 2;
  string Success = 3;
}

message RecoverRequest {
  int32 NodeId = 1;
}

message RecoverReply {
  int32 commitLength = 1;
  int32 term = 2;
  int32 NodeId = 3;
}

service RaftService {
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse);
  rpc ServeClient(ServeClientArgs) returns (ServeClientReply);

  rpc Recovery(RecoverRequest) returns (RecoverReply);
  rpc ReplicateLogs(LogReplicationRequest) returns (LogReplicationResponse); 
}
