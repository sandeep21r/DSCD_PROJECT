syntax = "proto3";

message SellerInfo {
  string address = 1;
  string uuid = 2;
}

message SellerResponse {
  enum Status {
    FAILED = 0;
    SUCCESS = 1;
  } 
  Status status = 1;
}


message ItemDetails {
  string item_id =1;
  string product_name = 2;
  string category = 3;
  int32 quantity = 4;
  string description = 5;
  string seller_address = 6;
  float price_per_unit = 7;
  string seller_uuid = 8;
  float rating = 9;
}

message ItemResponse {
  enum Status {
    FAILED = 0;
    SUCCESS = 1;
  }
  Status status = 1;
  string item_id = 2;
}

message UpdateItemRequest {
  string item_id = 1;
  float new_price = 2;
  int32 new_quantity = 3;
  string seller_address = 4;
  string seller_uuid = 5;
}

message UpdateItemResponse {
  enum Status {
    FAILED = 0;
    SUCCESS = 1;
  }
  Status status = 1;
  string item_id = 6;
  float new_price = 2;
  int32 new_quantity = 3;
  string seller_address = 4;
  string seller_uuid = 5;
}

message DeleteItemRequest {
  string item_id = 1;
  string seller_address = 2;
  string seller_uuid = 3;
}

message DeleteItemResponse {
  enum Status {
    FAILED = 0;
    SUCCESS = 1;
  }
  Status status = 1;
  string item_id = 4;
  string seller_address = 2;
  string seller_uuid = 3;
}

message DisplayItemsRequest {
  string seller_address = 1;
  string seller_uuid = 2;
}

message DisplayItemsResponse {
  enum Status {
    FAILED = 0;
    SUCCESS = 1;
  }
  Status status = 1;
  repeated ItemDetails items = 2;
}

message SearchItemRequest {
  string item_name = 1;
  string item_category = 2;
}


message SearchItemResponse {
  enum Status {
    SUCCESS = 0;
    FAILED = 1;
  }
  Status status = 1;
  repeated ItemDetails items = 2;
}

message BuyRequest {
  string item_id = 1;
  int32 quantity = 2;
  string buyer_address = 3;
}

message BuyResponse {
  enum Status {
    SUCCESS = 0;
    FAILED = 1;
  }
  Status status = 1;
}

message AddToWishListRequest {
  string item_id = 1;
  string buyer_address = 2;
}

message AddToWishListResponse {
  enum Status {
    SUCCESS = 0;
    FAILED = 1;
  }

  Status status = 1;
}

message RateItemRequest {
  string item_id = 1;
  string buyer_address = 2;
  int32 rating = 3;
}

message RateItemResponse {
  enum Status {
    SUCCESS = 0;
    FAILED = 1;
  }

  Status status = 1;
}


service MarketService {
    rpc SearchItem(SearchItemRequest) returns (SearchItemResponse);
    rpc BuyItem(BuyRequest) returns (BuyResponse);
    rpc AddToWishList(AddToWishListRequest) returns (AddToWishListResponse);
    rpc RateItem(RateItemRequest) returns (RateItemResponse);
    rpc RegisterSeller(SellerInfo) returns (SellerResponse);
    rpc SellItem(ItemDetails) returns (ItemResponse);
    rpc UpdateItem(UpdateItemRequest) returns (UpdateItemResponse);
    rpc DeleteItem(DeleteItemRequest) returns (DeleteItemResponse);
    rpc DisplaySellerItems(DisplayItemsRequest) returns (DisplayItemsResponse);
}
